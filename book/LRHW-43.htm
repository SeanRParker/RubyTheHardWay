<!DOCTYPE html>
<!-- saved from url=(0046)https://learnrubythehardway.org/book/ex43.html -->
<html class=" js flexbox flexboxlegacy canvas canvastext webgl no-touch geolocation postmessage websqldatabase indexeddb hashchange history draganddrop websockets rgba hsla multiplebgs backgroundsize borderimage borderradius boxshadow textshadow opacity cssanimations csscolumns cssgradients cssreflections csstransforms csstransforms3d csstransitions fontface generatedcontent video audio localstorage sessionstorage webworkers applicationcache svg inlinesvg smil svgclippaths"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  
  
  
  <title>Learn Ruby the Hard Way - Read for Free</title>

  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="description" content="">
  <meta name="viewport" content="width=device-width,initial-scale=1">

  <link href="https://www.google-analytics.com/" rel="dns-prefetch">
  <link href="https://ajax.googleapis.com/" rel="dns-prefetch">

  <link href="./LRHW-43_files/css" rel="stylesheet" type="text/css">
  <link href="./LRHW-43_files/style.min.css" rel="stylesheet">
  <!-- http://www.socicon.com -->
  <link href="./LRHW-43_files/icons.css" rel="stylesheet">

  
<meta name="generator" content="Docutils 0.12: http://docutils.sourceforge.net/">
<title>Exercise 43: Basic Object-Oriented Analysis and Design</title>

<style>@media print {#ghostery-purple-box {display:none !important}}</style><style media="print" class="jx_ui_StyleSheet" __jx__id="___$_2" type="text/css">.zopim { display: none !important }</style></head>

<body class="baseline-grid-off book-site" id="top" cz-shortcut-listen="true"><div class="zopim" __jx__id="___$_60 ___$_60" style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; border: 0px; background: transparent; overflow: hidden; position: fixed; z-index: 16000002; width: 180px; height: 30px; right: 10px; bottom: 0px; display: none;"><iframe frameborder="0" src="./LRHW-43_files/saved_resource.html" style="background-color: transparent; vertical-align: text-bottom; position: relative; width: 100%; height: 100%; min-width: 100%; min-height: 100%; max-width: 100%; max-height: 100%; margin: 0px; overflow: hidden; display: block;"></iframe></div><div class="zopim" __jx__id="___$_4 ___$_4" style="margin-top: 0px; margin-right: 0px; margin-bottom: 0px; padding: 0px; border: 0px; background: transparent; overflow: hidden; position: fixed; z-index: 16000001; right: 15px; bottom: 0px; border-top-left-radius: 5px; border-top-right-radius: 5px; display: none; width: 350px; height: 450px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 3px 2px;"><iframe frameborder="0" src="./LRHW-43_files/saved_resource(1).html" style="background-color: transparent; vertical-align: text-bottom; position: relative; width: 100%; height: 100%; min-width: 100%; min-height: 100%; max-width: 100%; max-height: 100%; margin: 0px; overflow: hidden; display: block;"></iframe></div>


  
  
<div data-scrollmagic-pin-spacer="" class="scrollmagic-pin-spacer" style="top: auto; left: auto; bottom: auto; right: auto; margin: 0px; display: block; position: absolute; box-sizing: content-box; width: 100%; height: 107px;"><header class="header" role="banner" style="position: absolute; margin: auto; top: auto; left: auto; bottom: auto; right: auto; box-sizing: border-box;">
  <nav class="navbar navbar-full nav-brand-family">
    <div class="row middle-xs">
      <ul class="brand-links show-md col-xs-3 col-sm-10 bare">
        <li><a href="http://learncodethehardway.org/" class="waves-effect">Learn:</a></li>
        
        <li><a href="http://learncodethehardway.org/python/" class="waves-effect">Python</a></li>
        
        <li><a href="http://learncodethehardway.org/ruby/" class="waves-effect active">Ruby</a></li>
        
        <li><a href="http://learncodethehardway.org/more-python/" class="waves-effect">More Python</a></li>
        
        <li><a href="http://learncodethehardway.org/c/" class="waves-effect">C</a></li>
        
        <li><a href="http://learncodethehardway.org/sql/" class="waves-effect">SQL</a></li>
        
        <li><a href="http://learncodethehardway.org/javascript/" class="waves-effect">Javascript</a></li>
        
        <li><a href="http://learncodethehardway.org/unix/" class="waves-effect">Unix</a></li>
        
        <li><a href="http://learncodethehardway.org/regex/" class="waves-effect">RegEx</a></li>
        
        <li><a href="http://www.learndesignthehardway.com/" class="waves-effect">Design</a></li>
        
      </ul>
      <ul class="brand-links hide-md col-xs-3 col-sm-10 bare">
        <li><a href="http://learncodethehardway.org/" class="waves-effect">LCTHW</a></li>
      </ul>
      
      <ul class="site-meta col-xs-9 col-sm-2 end-xs bare">
        <li><a href="https://shop.learncodethehardway.org/access/reactivate/" class="waves-effect"><i class="icon icon-user"></i> Login</a></li>
      </ul>
      
    </div>
  </nav>
  
  <nav class="navbar navbar-full nav-main" role="navigation">
    <div class="row between-xs center-xs middle-xs bare">
      <div class="col-xs-4 start-xs bare">
        <a href="https://learnrubythehardway.org/book/ex43.html#" class="no-underline nav-trigger waves-effect" id="toc"><div class="transformer hamburcloser">
          <div class="bar bar-t"></div>
          <div class="bar bar-m-a"></div>
          <div class="bar bar-m-b"></div>
          <div class="bar bar-b"></div>
        </div><span class="nav-trigger_text show-sm-inline">Contents</span></a>
      </div>
      <div class="col-xs-4"><strong>&nbsp;</strong></div>
      <div class="col-xs-4 end-xs bare">
        <a href="https://helpthw.zendesk.com/hc/en-us" class="no-underline nav-trigger waves-effect" id="help"><div class="transformer questioncloser">
          <div class="icon-question-mark"></div>
        </div><span class="nav-trigger_text show-sm-inline">Help</span></a>
      </div>
    </div>
  </nav>
  
</header></div>




  <div class="masthead ruby-background" style="background-image: url(&#39;/images/pattern-ruby.svg&#39;)">
    <img src="./LRHW-43_files/logo-ruby.svg" alt="Learn Ruby The Hard Way" class="logo">
  </div>

  <div class="wrapper">
    <aside class="sidebar sidebar-left" role="complementary">
      <nav class="side-nav-container">
        <ol class="table-of-contents">
          <h3>Table of Contents</h3>
            <li><a href="https://learnrubythehardway.org/book/preface.html">Preface</a></li>
            <li><a href="https://learnrubythehardway.org/book/intro.html">The Hard Way Is Easier</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex0.html">Ex0: The Setup</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex1.html">Ex1: A Good First Program</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex2.html">Ex2: Comments And Pound Characters</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex3.html">Ex3: Numbers And Math</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex4.html">Ex4: Variables And Names</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex5.html">Ex5: More Variables And Printing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex6.html">Ex6: Strings And Text</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex7.html">Ex7: More Printing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex8.html">Ex8: Printing, Printing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex9.html">Ex9: Printing, Printing, Printing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex10.html">Ex10: What Was That?</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex11.html">Ex11: Asking Questions</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex12.html">Ex12: Prompting People</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex13.html">Ex13: Parameters, Unpacking, Variables</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex14.html">Ex14: Prompting And Passing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex15.html">Ex15: Reading Files</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex16.html">Ex16: Reading And Writing Files</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex17.html">Ex17: More Files</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex18.html">Ex18: Names, Variables, Code, Functions</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex19.html">Ex19: Functions And Variables</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex20.html">Ex20: Functions And Files</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex21.html">Ex21: Functions Can Return Something</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex22.html">Ex22: What Do You Know So Far?</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex23.html">Ex23: Read Some Code</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex24.html">Ex24: More Practice</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex25.html">Ex25: Even More Practice</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex26.html">Ex26: Congratulations, Take A Test!</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex27.html">Ex27: Memorizing Logic</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex28.html">Ex28: Boolean Practice</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex29.html">Ex29: What If</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex30.html">Ex30: Else And If</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex31.html">Ex31: Making Decisions</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex32.html">Ex32: Loops And Lists</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex33.html">Ex33: While Loops</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex34.html">Ex34: Accessing Elements Of Lists</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex35.html">Ex35: Branches and Functions</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex36.html">Ex36: Designing and Debugging</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex37.html">Ex37: Symbol Review</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex38.html">Ex38: Doing Things To Lists</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex39.html">Ex39: Dictionaries, Oh Lovely Dictionaries</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex40.html">Ex40: Modules, Classes, And Objects</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex41.html">Ex41: Learning To Speak Object Oriented</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex42.html">Ex42: Is-A, Has-A, Objects, and Classes</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex43.html">Ex43: Gothons From Planet Percal #25</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex44.html">Ex44: Inheritance Vs. Composition</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex45.html">Ex45: You Make A Game</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex46.html">Ex46: A Project Skeleton</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex47.html">Ex47: Automated Testing</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex48.html">Ex48: Advanced User Input</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex49.html">Ex49: Making Sentences</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex50.html">Ex50: Your First Website</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex51.html">Ex51: Getting Input From A Browser</a></li>
            <li><a href="https://learnrubythehardway.org/book/ex52.html">Ex52: The Start Of Your Web Game</a></li>
            <li><a href="https://learnrubythehardway.org/book/advice.html">Advice From An Old Programmer</a></li>
            <li><a href="https://learnrubythehardway.org/book/next.html">Next Steps</a></li>
            <li><a href="https://learnrubythehardway.org/book/appendixa.html">Appendix A: Command Line Crash Course</a></li>
        </ol>
        <ul class="site-links">
          <h3>Learn the Hard Way</h3>
          <li><a href="https://learnrubythehardway.org/book/ex43.html#" class="waves-effect"><i class="icon-information"></i> About LPTHW</a></li>
          <li><a href="https://learnrubythehardway.org/book/ex43.html#" class="waves-effect"><i class="icon-first-aid"></i> Help &amp; Support</a></li>
          <li><a href="https://learnrubythehardway.org/book/ex43.html#" class="waves-effect"><i class="icon-power-1"></i> Follow us on Twitter</a></li>
        </ul>
      </nav>
      <div class="colophon text-center">
        <div class="intro">
          <p class="bare-bottom" id="p0">
            The type for this book is set in 18px / 1.5
            <a href="https://www.google.com/fonts/specimen/Source+Serif+Pro">Adobe Serif</a>,
            <a href="https://www.google.com/fonts/specimen/Source+Sans+Pro">Sans</a>, and
            <a href="https://www.google.com/fonts/specimen/Source+Code+Pro">Code</a>.
          </p>
        </div>
        <div class="printers-mark">
          <div class="inscription">Docendo <i class="icon-repeat"></i> Discimus</div>
        </div>
      </div>
    </aside>

    <div class="overlay"></div>

    <main class="main ruby" role="main">
      <div class="main-container row center-xs">
    <div class="col-xs-11 col-sm-10 col-md-9 col-lg-8">

        <div class="content">
            <!--- RST STARTS -->
            <h1 class="title">Exercise 43: Basic Object-Oriented Analysis and Design</h1>
            <p id="p1">I'm going to describe a process to use when you want to build something using Ruby, specifically with object-oriented programming (OOP).  What I mean by a "process" is that I'll give you a set of steps that you do in order, but that you aren't meant to be a slave to or that will totally always work for every problem.  They are just a good starting point for many programming problems and shouldn't be considered the <em>only</em> way to solve these types of problems.  This process is just one way to do it that you can follow.</p>
<p id="p2">The process is as follows:</p>
<ol class="arabic simple">
<li>Write or draw about the problem.</li>
<li>Extract key concepts from 1 and research them.</li>
<li>Create a class hierarchy and object map for the concepts.</li>
<li>Code the classes and a test to run them.</li>
<li>Repeat and refine.</li>
</ol>
<p id="p3">The way to look at this process is that it is "top down," meaning it starts from the very abstract loose idea and then slowly refines it until the idea is solid and something you can code.</p>
<p id="p4">I start by just writing about the problem and trying to think up anything I can about it.  Maybe I'll even draw a diagram or two, maybe a map of some kind, or even write myself a series of emails describing the problem.  This gives me a way to express the key concepts in the problem and also explore what I might already know about it.</p>
<p id="p5">Then I go through these notes, drawings, and descriptions and I pull out the key concepts.  There's a simple trick to doing this:  Simply make a list of all the <em>nouns</em> and <em>verbs</em> in your writing and drawings, then write out how they're related.  This gives me a good list of names for classes, objects, and functions in the next step.  I take this list of concepts and then research any that I don't understand so I can refine them further if I needed.</p>
<p id="p6">Once I have my list of concepts I create a simple outline/tree of the concepts and how they are related as classes.  You can usually take your list of nouns and start asking "Is this one like other concept nouns? That means they have a common parent class, so what is it called?" Keep doing this until you have a class hierarchy that's just a simple tree list or a diagram.  Then take the <em>verbs</em> you have and see if those are function names for each class and put them in your tree.</p>
<p id="p7">With this class hierarchy figured out, I sit down and write some basic skeleton code that has just the classes, their functions, and nothing more.  I then write a test that runs this code and makes sure the classes I've made make sense and work right.  Sometimes I may write the test first though, and other times I might write a little test, a little code, a little test, etc. until I have the whole thing built.</p>
<p id="p8">Finally, I keep cycling over this process repeating it and refining as I go and making it as clear as I can before doing more implementation.  If I get stuck at any particular part because of a concept or problem I haven't anticipated, then I sit down and start the process over on just that part to figure it out more before continuing.</p>
<p id="p9">I will now go through this process while coming up with a game engine and a game for this exercise.</p>
<div class="section" id="the-analysis-of-a-simple-game-engine">
<h1>The Analysis of a Simple Game Engine</h1>
<p id="p10">The game I want to make is called "Gothons from Planet Percal #25" and will be a small space adventure game. With nothing more than that concept in my mind I can explore the idea and figure out how to make the game come to life.</p>
<div class="section" id="write-or-draw-about-the-problem">
<h2>Write or Draw About the Problem</h2>
<p id="p11">I'm going to write a little paragraph for the game:</p>
<p id="p12">"Aliens have invaded a space ship and our hero has to go through a maze of rooms defeating them so he can escape into an escape pod to the planet below.  The game will be more like a Zork or Adventure type game with text outputs and funny ways to die.  The game will involve an engine that runs a map full of rooms or scenes.  Each room will print its own description when the player enters it and then tell the engine what room to run next out of the map."</p>
<p id="p13">At this point I have a good idea for the game and how it would run, so now I want to describe each scene:</p>
<dl class="docutils">
<dt>Death</dt>
<dd>This is when the player dies and should be something funny.</dd>
<dt>Central Corridor</dt>
<dd>This is the starting point and has a Gothon already standing there they have to defeat with a joke before continuing.</dd>
<dt>Laser Weapon Armory</dt>
<dd>This is where the hero gets a neutron bomb to blow up the ship before getting to the escape pod. It has a keypad the hero has to guess the number for.</dd>
<dt>The Bridge</dt>
<dd>Another battle scene with a Gothon where the hero places the bomb.</dd>
<dt>Escape Pod</dt>
<dd>Where the hero escapes but only after guessing the right escape pod.</dd>
</dl>
<p id="p14">At this point I might draw out a map of these, maybe write more descriptions of each room, whatever comes to mind as I explore the problem.</p>
</div>
<div class="section" id="extract-key-concepts-and-research-them">
<h2>Extract Key Concepts and Research Them</h2>
<p id="p15">I now have enough information to extract some of the nouns and analyze their class hierarchy.  First I make a list of all the nouns:</p>
<ul class="simple">
<li>Alien</li>
<li>Player</li>
<li>Ship</li>
<li>Maze</li>
<li>Room</li>
<li>Scene</li>
<li>Gothon</li>
<li>Escape Pod</li>
<li>Planet</li>
<li>Map</li>
<li>Engine</li>
<li>Death</li>
<li>Central Corridor</li>
<li>Laser Weapon Armory</li>
<li>The Bridge</li>
</ul>
<p id="p16">I would also possibly go through all the verbs and see if they are anything that might be good function names, but I'll skip that for now.</p>
<p id="p17">At this point you might also research each of these concepts and anything you don't know right now.  For example, I might play a few of these types of games and make sure I know how they work.  I might research how ships are designed or how bombs work.  Maybe I'll research some technical issue like how to store the game's state in a database.  After I've done this research I might start over at step 1 based on new information I have and rewrite my description and extract new concepts.</p>
</div>
<div class="section" id="create-a-class-hierarchy-and-object-map-for-the-concepts">
<h2>Create a Class Hierarchy and Object Map for the Concepts</h2>
<p id="p18">Once I have that I turn it into a class hierarchy by asking "What is similar to other things?"  I also ask "What is basically just another word for another thing?"</p>
<p id="p19">Right away I see that "Room" and "Scene" are basically the same thing depending on how I want to do things.  I'm going to pick "Scene" for this game.  Then I see that all the specific rooms like "Central Corridor" are basically just Scenes.  I see also that Death is basically a Scene, which confirms my choice of "Scene" over "Room" since you can have a death scene, but a death room is kind of odd.  "Maze" and "Map" are basically the same so I'm going to go with "Map" since I used it more often.  I don't want to do a battle system so I'm going to ignore "Alien" and "Player" and save that for later.  The "Planet" could also just be another scene instead of something specific.</p>
<p id="p20">After all of that thought process I start to make a class hierarchy that looks like this in my text editor:</p>
<pre class="literal-block">* Map
* Engine
* Scene
  * Death
  * Central Corridor
  * Laser Weapon Armory
  * The Bridge
  * Escape Pod
</pre>
<p id="p21">I would then go through and figure out what actions are needed on each thing based on verbs in the description.  For example, I know from the description I'm going to need a way to "run" the engine, "get the next scene" from the map, get the "opening scene," and "enter" a scene.  I'll add those like this:</p>
<pre class="literal-block">* Map
  - next_scene
  - opening_scene
* Engine
  - play
* Scene
  - enter
  * Death
  * Central Corridor
  * Laser Weapon Armory
  * The Bridge
  * Escape Pod
</pre>
<p id="p22">Notice how I just put <tt class="docutils literal"><span class="pre">-enter</span></tt> under <tt class="docutils literal">Scene</tt> since I know that all the scenes under it will inherit it and have to override it later.</p>
</div>
<div class="section" id="code-the-classes-and-a-test-to-run-them">
<h2>Code the Classes and a Test to Run Them</h2>
<p id="p23">Once I have this tree of classes and some of the functions I open up a source file in my editor and try to write the code for it.  Usually I'll just copy-paste the tree into the source file and then edit it into classes.  Here's a small example of how this might look at first, with a simple little test at the end of the file.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43_classes.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-2"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-3"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-4"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-5"></a>
<a name="ruby--ex43_classes.rb-idio.html-6"></a>
<a name="ruby--ex43_classes.rb-idio.html-7"></a><span class="k">class</span> <span class="nc">Engine</span>
<a name="ruby--ex43_classes.rb-idio.html-8"></a>
<a name="ruby--ex43_classes.rb-idio.html-9"></a>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">scene_map</span><span class="p">)</span>
<a name="ruby--ex43_classes.rb-idio.html-10"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-11"></a>
<a name="ruby--ex43_classes.rb-idio.html-12"></a>  <span class="k">def</span> <span class="nf">play</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-13"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-14"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-15"></a>
<a name="ruby--ex43_classes.rb-idio.html-16"></a><span class="k">class</span> <span class="nc">Death</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-17"></a>
<a name="ruby--ex43_classes.rb-idio.html-18"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-19"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-20"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-21"></a>
<a name="ruby--ex43_classes.rb-idio.html-22"></a><span class="k">class</span> <span class="nc">CentralCorridor</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-23"></a>
<a name="ruby--ex43_classes.rb-idio.html-24"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-25"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-26"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-27"></a>
<a name="ruby--ex43_classes.rb-idio.html-28"></a><span class="k">class</span> <span class="nc">LaserWeaponArmory</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-29"></a>
<a name="ruby--ex43_classes.rb-idio.html-30"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-31"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-32"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-33"></a>
<a name="ruby--ex43_classes.rb-idio.html-34"></a><span class="k">class</span> <span class="nc">TheBridge</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-35"></a>
<a name="ruby--ex43_classes.rb-idio.html-36"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-37"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-38"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-39"></a>
<a name="ruby--ex43_classes.rb-idio.html-40"></a><span class="k">class</span> <span class="nc">EscapePod</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43_classes.rb-idio.html-41"></a>
<a name="ruby--ex43_classes.rb-idio.html-42"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-43"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-44"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-45"></a>
<a name="ruby--ex43_classes.rb-idio.html-46"></a>
<a name="ruby--ex43_classes.rb-idio.html-47"></a><span class="k">class</span> <span class="nc">Map</span>
<a name="ruby--ex43_classes.rb-idio.html-48"></a>
<a name="ruby--ex43_classes.rb-idio.html-49"></a>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span> <span class="n">start_scene</span><span class="p">)</span>
<a name="ruby--ex43_classes.rb-idio.html-50"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-51"></a>
<a name="ruby--ex43_classes.rb-idio.html-52"></a>  <span class="k">def</span> <span class="nf">next_scene</span><span class="p">(</span> <span class="n">scene_name</span><span class="p">)</span>
<a name="ruby--ex43_classes.rb-idio.html-53"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-54"></a>
<a name="ruby--ex43_classes.rb-idio.html-55"></a>  <span class="k">def</span> <span class="nf">opening_scene</span><span class="p">()</span>
<a name="ruby--ex43_classes.rb-idio.html-56"></a>  <span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-57"></a><span class="k">end</span>
<a name="ruby--ex43_classes.rb-idio.html-58"></a>
<a name="ruby--ex43_classes.rb-idio.html-59"></a>
<a name="ruby--ex43_classes.rb-idio.html-60"></a><span class="n">a_map</span> <span class="o">=</span> <span class="no">Map</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">'central_corridor'</span><span class="p">)</span>
<a name="ruby--ex43_classes.rb-idio.html-61"></a><span class="n">a_game</span> <span class="o">=</span> <span class="no">Engine</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">a_map</span><span class="p">)</span>
<a name="ruby--ex43_classes.rb-idio.html-62"></a><span class="n">a_game</span><span class="o">.</span><span class="n">play</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table><p id="p24">In this file you can see that I simply replicated the hierarchy I wanted and then a little bit of code at the end to run it and see if it all works in this basic structure.  In the later sections of this exercise you'll fill in the rest of this code and make it work to match the description of the game.</p>
</div>
<div class="section" id="repeat-and-refine">
<h2>Repeat and Refine</h2>
<p id="p25">The last step in my little process isn't so much a step as it is a <tt class="docutils literal"><span class="pre">while-loop</span></tt>.  You don't ever do this as a one-pass operation.  Instead you go back over the whole process again and refine it based on information you've learned from later steps.  Sometimes I'll get to step 3 and realize that I need to work on 1 and 2 more, so I'll stop and go back and work on those.  Sometimes I'll get a flash of inspiration and jump to the end to code up the solution in my head while I have it there, but then I'll go back and do the previous steps to make sure I cover all the possibilities I have.</p>
<p id="p26">The other idea in this process is that it's not just something you do at one single level but something that you can do at every level when you run into a particular problem.  Let's say I don't know how to write the <tt class="docutils literal">Engine.play</tt> method yet.  I can stop and do this whole process on <em>just</em> that one function to figure out how to write it.</p>
</div>
</div>
<div class="section" id="top-down-vs-bottom-up">
<h1>Top Down vs. Bottom Up</h1>
<p id="p27">The process is typically labeled "top down" since it starts at the most abstract concepts (the top) and works its way down to actual implementation.  I want you to use this process I just described when analyzing problems in the book from now on, but you should know that there's another way to solve problems in programming that starts with code and goes "up" to the abstract concepts.  This other way is labeled "bottom up."  Here are the general steps you follow to do this:</p>
<ol class="arabic simple">
<li>Take a small piece of the problem; hack on some code and get it to run barely.</li>
<li>Refine the code into something more formal with classes and automated tests.</li>
<li>Extract the key concepts you're using and try to find research for them.</li>
<li>Write a description of what's really going on.</li>
<li>Go back and refine the code, possibly throwing it out and starting over.</li>
<li>Repeat, moving on to some other piece of the problem.</li>
</ol>
<p id="p28">I find this process is better once you're more solid at programming and, are naturally thinking in code about problems.  This process is very good when you know small pieces of the overall puzzle, but maybe don't have enough information yet about the overall concept.  Breaking it down in little pieces and exploring with code then helps you slowly grind away at the problem until you've solved it.  However, remember that your solution will probably be meandering and weird, so that's why my version of this process involves going back and finding research then cleaning things up based on what you've learned.</p>
</div>
<div class="section" id="the-code-for-gothons-from-planet-percal-25">
<h1>The Code for "Gothons from Planet Percal #25"</h1>
<p id="p29">Stop! I'm going to show you my final solution to the above problem but I don't want you to just jump in and type this up.  I want <em>you</em> to take the rough skeleton code I did and try to make it work based on the description.  Once you have your solution then you can come back and see how I did it.</p>
<p id="p30">I'm going to break this final file <tt class="docutils literal">ex43.rb</tt> down into sections and explain each one rather than dump all the code at once.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3
4
5
6</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">Scene</span>
<a name="ruby--ex43.rb-idio.html-2"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-3"></a>    <span class="nb">puts</span> <span class="s2">"This scene is not yet configured. Subclass it and implement enter()."</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-5"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-6"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p31">As you saw in the skeleton code, I have a base class for <tt class="docutils literal">Scene</tt> that will have the common things that all scenes do.  In this simple program they don't do much so this is more a demonstration of what you would do to make a base class.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">Engine</span>
<a name="ruby--ex43.rb-idio.html-2"></a>
<a name="ruby--ex43.rb-idio.html-3"></a>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">scene_map</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="vi">@scene_map</span> <span class="o">=</span> <span class="n">scene_map</span>
<a name="ruby--ex43.rb-idio.html-5"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-6"></a>
<a name="ruby--ex43.rb-idio.html-7"></a>  <span class="k">def</span> <span class="nf">play</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-8"></a>    <span class="n">current_scene</span> <span class="o">=</span> <span class="vi">@scene_map</span><span class="o">.</span><span class="n">opening_scene</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-9"></a>    <span class="n">last_scene</span> <span class="o">=</span> <span class="vi">@scene_map</span><span class="o">.</span><span class="n">next_scene</span><span class="p">(</span><span class="s1">'finished'</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-10"></a>
<a name="ruby--ex43.rb-idio.html-11"></a>    <span class="k">while</span> <span class="n">current_scene</span> <span class="o">!=</span> <span class="n">last_scene</span>
<a name="ruby--ex43.rb-idio.html-12"></a>      <span class="n">next_scene_name</span> <span class="o">=</span> <span class="n">current_scene</span><span class="o">.</span><span class="n">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-13"></a>      <span class="n">current_scene</span> <span class="o">=</span> <span class="vi">@scene_map</span><span class="o">.</span><span class="n">next_scene</span><span class="p">(</span><span class="n">next_scene_name</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-14"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-15"></a>
<a name="ruby--ex43.rb-idio.html-16"></a>    <span class="c1"># be sure to print out the last scene</span>
<a name="ruby--ex43.rb-idio.html-17"></a>    <span class="n">current_scene</span><span class="o">.</span><span class="n">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-18"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-19"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p32">I also have my <tt class="docutils literal">Engine</tt> class and you can see how I'm already using the methods for <tt class="docutils literal">Map.opening_scene</tt> and <tt class="docutils literal">Map.next_scene</tt>.  Because I've done a bit of planning I can just assume I'll write those and then use them before I've written the <tt class="docutils literal">Map</tt> class.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">Death</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-2"></a>
<a name="ruby--ex43.rb-idio.html-3"></a>  <span class="vc">@@quips</span> <span class="o">=</span> <span class="o">[</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="s2">"You died.  You kinda suck at this."</span><span class="p">,</span>
<a name="ruby--ex43.rb-idio.html-5"></a>     <span class="s2">"Your mom would be proud...if she were smarter."</span><span class="p">,</span>
<a name="ruby--ex43.rb-idio.html-6"></a>     <span class="s2">"Such a luser."</span><span class="p">,</span>
<a name="ruby--ex43.rb-idio.html-7"></a>     <span class="s2">"I have a small puppy that's better at this."</span>
<a name="ruby--ex43.rb-idio.html-8"></a>  <span class="o">]</span>
<a name="ruby--ex43.rb-idio.html-9"></a>
<a name="ruby--ex43.rb-idio.html-10"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-11"></a>    <span class="nb">puts</span> <span class="vc">@@quips</span><span class="o">[</span><span class="nb">rand</span><span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="p">(</span><span class="vc">@@quips</span><span class="o">.</span><span class="n">length</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span><span class="o">]</span>
<a name="ruby--ex43.rb-idio.html-12"></a>    <span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-13"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-14"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p33">My first scene is the odd scene named <tt class="docutils literal">Death</tt>, which shows you the simplest kind of scene you can write.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">CentralCorridor</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-2"></a>
<a name="ruby--ex43.rb-idio.html-3"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="nb">puts</span> <span class="s2">"The Gothons of Planet Percal #25 have invaded your ship and destroyed"</span>
<a name="ruby--ex43.rb-idio.html-5"></a>    <span class="nb">puts</span> <span class="s2">"your entire crew.  You are the last surviving member and your last"</span>
<a name="ruby--ex43.rb-idio.html-6"></a>    <span class="nb">puts</span> <span class="s2">"mission is to get the neutron destruct bomb from the Weapons Armory,"</span>
<a name="ruby--ex43.rb-idio.html-7"></a>    <span class="nb">puts</span> <span class="s2">"put it in the bridge, and blow the ship up after getting into an "</span>
<a name="ruby--ex43.rb-idio.html-8"></a>    <span class="nb">puts</span> <span class="s2">"escape pod."</span>
<a name="ruby--ex43.rb-idio.html-9"></a>    <span class="nb">puts</span> <span class="s2">"</span><span class="se">\n</span><span class="s2">"</span>
<a name="ruby--ex43.rb-idio.html-10"></a>    <span class="nb">puts</span> <span class="s2">"You're running down the central corridor to the Weapons Armory when"</span>
<a name="ruby--ex43.rb-idio.html-11"></a>    <span class="nb">puts</span> <span class="s2">"a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume"</span>
<a name="ruby--ex43.rb-idio.html-12"></a>    <span class="nb">puts</span> <span class="s2">"flowing around his hate filled body.  He's blocking the door to the"</span>
<a name="ruby--ex43.rb-idio.html-13"></a>    <span class="nb">puts</span> <span class="s2">"Armory and about to pull a weapon to blast you."</span>
<a name="ruby--ex43.rb-idio.html-14"></a>    <span class="nb">print</span> <span class="s2">"&gt; "</span>
<a name="ruby--ex43.rb-idio.html-15"></a>
<a name="ruby--ex43.rb-idio.html-16"></a>    <span class="n">action</span> <span class="o">=</span> <span class="vg">$stdin</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span>
<a name="ruby--ex43.rb-idio.html-17"></a>
<a name="ruby--ex43.rb-idio.html-18"></a>    <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">"shoot!"</span>
<a name="ruby--ex43.rb-idio.html-19"></a>      <span class="nb">puts</span> <span class="s2">"Quick on the draw you yank out your blaster and fire it at the Gothon."</span>
<a name="ruby--ex43.rb-idio.html-20"></a>      <span class="nb">puts</span> <span class="s2">"His clown costume is flowing and moving around his body, which throws"</span>
<a name="ruby--ex43.rb-idio.html-21"></a>      <span class="nb">puts</span> <span class="s2">"off your aim.  Your laser hits his costume but misses him entirely.  This"</span>
<a name="ruby--ex43.rb-idio.html-22"></a>      <span class="nb">puts</span> <span class="s2">"completely ruins his brand new costume his mother bought him, which"</span>
<a name="ruby--ex43.rb-idio.html-23"></a>      <span class="nb">puts</span> <span class="s2">"makes him fly into an insane rage and blast you repeatedly in the face until"</span>
<a name="ruby--ex43.rb-idio.html-24"></a>      <span class="nb">puts</span> <span class="s2">"you are dead.  Then he eats you."</span>
<a name="ruby--ex43.rb-idio.html-25"></a>      <span class="k">return</span> <span class="s1">'death'</span>
<a name="ruby--ex43.rb-idio.html-26"></a>
<a name="ruby--ex43.rb-idio.html-27"></a>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">"dodge!"</span>
<a name="ruby--ex43.rb-idio.html-28"></a>      <span class="nb">puts</span> <span class="s2">"Like a world class boxer you dodge, weave, slip and slide right"</span>
<a name="ruby--ex43.rb-idio.html-29"></a>      <span class="nb">puts</span> <span class="s2">"as the Gothon's blaster cranks a laser past your head."</span>
<a name="ruby--ex43.rb-idio.html-30"></a>      <span class="nb">puts</span> <span class="s2">"In the middle of your artful dodge your foot slips and you"</span>
<a name="ruby--ex43.rb-idio.html-31"></a>      <span class="nb">puts</span> <span class="s2">"bang your head on the metal wall and pass out."</span>
<a name="ruby--ex43.rb-idio.html-32"></a>      <span class="nb">puts</span> <span class="s2">"You wake up shortly after only to die as the Gothon stomps on"</span>
<a name="ruby--ex43.rb-idio.html-33"></a>      <span class="nb">puts</span> <span class="s2">"your head and eats you."</span>
<a name="ruby--ex43.rb-idio.html-34"></a>      <span class="k">return</span> <span class="s1">'death'</span>
<a name="ruby--ex43.rb-idio.html-35"></a>
<a name="ruby--ex43.rb-idio.html-36"></a>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">"tell a joke"</span>
<a name="ruby--ex43.rb-idio.html-37"></a>      <span class="nb">puts</span> <span class="s2">"Lucky for you they made you learn Gothon insults in the academy."</span>
<a name="ruby--ex43.rb-idio.html-38"></a>      <span class="nb">puts</span> <span class="s2">"You tell the one Gothon joke you know:"</span>
<a name="ruby--ex43.rb-idio.html-39"></a>      <span class="nb">puts</span> <span class="s2">"Lbhe zbgure vf fb sng, jura fur fvgf nebhaq gur ubhfr, fur fvgf nebhaq gur ubhfr."</span>
<a name="ruby--ex43.rb-idio.html-40"></a>      <span class="nb">puts</span> <span class="s2">"The Gothon stops, tries not to laugh, then busts out laughing and can't move."</span>
<a name="ruby--ex43.rb-idio.html-41"></a>      <span class="nb">puts</span> <span class="s2">"While he's laughing you run up and shoot him square in the head"</span>
<a name="ruby--ex43.rb-idio.html-42"></a>      <span class="nb">puts</span> <span class="s2">"putting him down, then jump through the Weapon Armory door."</span>
<a name="ruby--ex43.rb-idio.html-43"></a>      <span class="k">return</span> <span class="s1">'laser_weapon_armory'</span>
<a name="ruby--ex43.rb-idio.html-44"></a>
<a name="ruby--ex43.rb-idio.html-45"></a>    <span class="k">else</span>
<a name="ruby--ex43.rb-idio.html-46"></a>      <span class="nb">puts</span> <span class="s2">"DOES NOT COMPUTE!"</span>
<a name="ruby--ex43.rb-idio.html-47"></a>      <span class="k">return</span> <span class="s1">'central_corridor'</span>
<a name="ruby--ex43.rb-idio.html-48"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-49"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-50"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p34">After that I've created the <tt class="docutils literal">CentralCorridor</tt>, which is the start of the game.  I'm doing the scenes for the game before the <tt class="docutils literal">Map</tt> because I need to reference them later.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 50
 51
 52
 53
 54
 55
 56
 57
 58
 59
 60
 61
 62
 63
 64
 65
 66
 67
 68
 69
 70
 71
 72
 73
 74
 75
 76
 77
 78
 79
 80
 81
 82
 83
 84
 85
 86
 87
 88
 89
 90
 91
 92
 93
 94
 95
 96
 97
 98
 99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">LaserWeaponArmory</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-2"></a>
<a name="ruby--ex43.rb-idio.html-3"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="nb">puts</span> <span class="s2">"You do a dive roll into the Weapon Armory, crouch and scan the room"</span>
<a name="ruby--ex43.rb-idio.html-5"></a>    <span class="nb">puts</span> <span class="s2">"for more Gothons that might be hiding.  It's dead quiet, too quiet."</span>
<a name="ruby--ex43.rb-idio.html-6"></a>    <span class="nb">puts</span> <span class="s2">"You stand up and run to the far side of the room and find the"</span>
<a name="ruby--ex43.rb-idio.html-7"></a>    <span class="nb">puts</span> <span class="s2">"neutron bomb in its container.  There's a keypad lock on the box"</span>
<a name="ruby--ex43.rb-idio.html-8"></a>    <span class="nb">puts</span> <span class="s2">"and you need the code to get the bomb out.  If you get the code"</span>
<a name="ruby--ex43.rb-idio.html-9"></a>    <span class="nb">puts</span> <span class="s2">"wrong 10 times then the lock closes forever and you can't"</span>
<a name="ruby--ex43.rb-idio.html-10"></a>    <span class="nb">puts</span> <span class="s2">"get the bomb.  The code is 3 digits."</span>
<a name="ruby--ex43.rb-idio.html-11"></a>    <span class="n">code</span> <span class="o">=</span> <span class="s2">"</span><span class="si">#{</span><span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">9</span><span class="p">)</span><span class="si">}#{</span><span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">9</span><span class="p">)</span><span class="si">}#{</span><span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">9</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span>
<a name="ruby--ex43.rb-idio.html-12"></a>    <span class="nb">print</span> <span class="s2">"[keypad]&gt; "</span>
<a name="ruby--ex43.rb-idio.html-13"></a>    <span class="n">guess</span> <span class="o">=</span> <span class="vg">$stdin</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span>
<a name="ruby--ex43.rb-idio.html-14"></a>    <span class="n">guesses</span> <span class="o">=</span> <span class="mi">0</span>
<a name="ruby--ex43.rb-idio.html-15"></a>
<a name="ruby--ex43.rb-idio.html-16"></a>    <span class="k">while</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">code</span> <span class="o">&amp;&amp;</span> <span class="n">guesses</span> <span class="o">&lt;</span> <span class="mi">10</span>
<a name="ruby--ex43.rb-idio.html-17"></a>      <span class="nb">puts</span> <span class="s2">"BZZZZEDDD!"</span>
<a name="ruby--ex43.rb-idio.html-18"></a>      <span class="n">guesses</span> <span class="o">+=</span> <span class="mi">1</span>
<a name="ruby--ex43.rb-idio.html-19"></a>      <span class="nb">print</span> <span class="s2">"[keypad]&gt; "</span>
<a name="ruby--ex43.rb-idio.html-20"></a>      <span class="n">guess</span> <span class="o">=</span> <span class="vg">$stdin</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span>
<a name="ruby--ex43.rb-idio.html-21"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-22"></a>
<a name="ruby--ex43.rb-idio.html-23"></a>    <span class="k">if</span> <span class="n">guess</span> <span class="o">==</span> <span class="n">code</span>
<a name="ruby--ex43.rb-idio.html-24"></a>        <span class="nb">puts</span> <span class="s2">"The container clicks open and the seal breaks, letting gas out."</span>
<a name="ruby--ex43.rb-idio.html-25"></a>        <span class="nb">puts</span> <span class="s2">"You grab the neutron bomb and run as fast as you can to the"</span>
<a name="ruby--ex43.rb-idio.html-26"></a>        <span class="nb">puts</span> <span class="s2">"bridge where you must place it in the right spot."</span>
<a name="ruby--ex43.rb-idio.html-27"></a>        <span class="k">return</span> <span class="s1">'the_bridge'</span>
<a name="ruby--ex43.rb-idio.html-28"></a>    <span class="k">else</span>
<a name="ruby--ex43.rb-idio.html-29"></a>        <span class="nb">puts</span> <span class="s2">"The lock buzzes one last time and then you hear a sickening"</span>
<a name="ruby--ex43.rb-idio.html-30"></a>        <span class="nb">puts</span> <span class="s2">"melting sound as the mechanism is fused together."</span>
<a name="ruby--ex43.rb-idio.html-31"></a>        <span class="nb">puts</span> <span class="s2">"You decide to sit there, and finally the Gothons blow up the"</span>
<a name="ruby--ex43.rb-idio.html-32"></a>        <span class="nb">puts</span> <span class="s2">"ship from their ship and you die."</span>
<a name="ruby--ex43.rb-idio.html-33"></a>        <span class="k">return</span> <span class="s1">'death'</span>
<a name="ruby--ex43.rb-idio.html-34"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-35"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-36"></a><span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-37"></a>
<a name="ruby--ex43.rb-idio.html-38"></a>
<a name="ruby--ex43.rb-idio.html-39"></a><span class="k">class</span> <span class="nc">TheBridge</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-40"></a>
<a name="ruby--ex43.rb-idio.html-41"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-42"></a>    <span class="nb">puts</span> <span class="s2">"You burst onto the Bridge with the netron destruct bomb"</span>
<a name="ruby--ex43.rb-idio.html-43"></a>    <span class="nb">puts</span> <span class="s2">"under your arm and surprise 5 Gothons who are trying to"</span>
<a name="ruby--ex43.rb-idio.html-44"></a>    <span class="nb">puts</span> <span class="s2">"take control of the ship.  Each of them has an even uglier"</span>
<a name="ruby--ex43.rb-idio.html-45"></a>    <span class="nb">puts</span> <span class="s2">"clown costume than the last.  They haven't pulled their"</span>
<a name="ruby--ex43.rb-idio.html-46"></a>    <span class="nb">puts</span> <span class="s2">"weapons out yet, as they see the active bomb under your"</span>
<a name="ruby--ex43.rb-idio.html-47"></a>    <span class="nb">puts</span> <span class="s2">"arm and don't want to set it off."</span>
<a name="ruby--ex43.rb-idio.html-48"></a>    <span class="nb">print</span> <span class="s2">"&gt; "</span>
<a name="ruby--ex43.rb-idio.html-49"></a>
<a name="ruby--ex43.rb-idio.html-50"></a>    <span class="n">action</span> <span class="o">=</span> <span class="vg">$stdin</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span>
<a name="ruby--ex43.rb-idio.html-51"></a>
<a name="ruby--ex43.rb-idio.html-52"></a>    <span class="k">if</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">"throw the bomb"</span>
<a name="ruby--ex43.rb-idio.html-53"></a>      <span class="nb">puts</span> <span class="s2">"In a panic you throw the bomb at the group of Gothons"</span>
<a name="ruby--ex43.rb-idio.html-54"></a>      <span class="nb">puts</span> <span class="s2">"and make a leap for the door.  Right as you drop it a"</span>
<a name="ruby--ex43.rb-idio.html-55"></a>      <span class="nb">puts</span> <span class="s2">"Gothon shoots you right in the back killing you."</span>
<a name="ruby--ex43.rb-idio.html-56"></a>      <span class="nb">puts</span> <span class="s2">"As you die you see another Gothon frantically try to disarm"</span>
<a name="ruby--ex43.rb-idio.html-57"></a>      <span class="nb">puts</span> <span class="s2">"the bomb. You die knowing they will probably blow up when"</span>
<a name="ruby--ex43.rb-idio.html-58"></a>      <span class="nb">puts</span> <span class="s2">"it goes off."</span>
<a name="ruby--ex43.rb-idio.html-59"></a>      <span class="k">return</span> <span class="s1">'death'</span>
<a name="ruby--ex43.rb-idio.html-60"></a>
<a name="ruby--ex43.rb-idio.html-61"></a>    <span class="k">elsif</span> <span class="n">action</span> <span class="o">==</span> <span class="s2">"slowly place the bomb"</span>
<a name="ruby--ex43.rb-idio.html-62"></a>      <span class="nb">puts</span> <span class="s2">"You point your blaster at the bomb under your arm"</span>
<a name="ruby--ex43.rb-idio.html-63"></a>      <span class="nb">puts</span> <span class="s2">"and the Gothons put their hands up and start to sweat."</span>
<a name="ruby--ex43.rb-idio.html-64"></a>      <span class="nb">puts</span> <span class="s2">"You inch backward to the door, open it, and then carefully"</span>
<a name="ruby--ex43.rb-idio.html-65"></a>      <span class="nb">puts</span> <span class="s2">"place the bomb on the floor, pointing your blaster at it."</span>
<a name="ruby--ex43.rb-idio.html-66"></a>      <span class="nb">puts</span> <span class="s2">"You then jump back through the door, punch the close button"</span>
<a name="ruby--ex43.rb-idio.html-67"></a>      <span class="nb">puts</span> <span class="s2">"and blast the lock so the Gothons can't get out."</span>
<a name="ruby--ex43.rb-idio.html-68"></a>      <span class="nb">puts</span> <span class="s2">"Now that the bomb is placed you run to the escape pod to"</span>
<a name="ruby--ex43.rb-idio.html-69"></a>      <span class="nb">puts</span> <span class="s2">"get off this tin can."</span>
<a name="ruby--ex43.rb-idio.html-70"></a>      <span class="k">return</span> <span class="s1">'escape_pod'</span>
<a name="ruby--ex43.rb-idio.html-71"></a>    <span class="k">else</span>
<a name="ruby--ex43.rb-idio.html-72"></a>      <span class="nb">puts</span> <span class="s2">"DOES NOT COMPUTE!"</span>
<a name="ruby--ex43.rb-idio.html-73"></a>      <span class="k">return</span> <span class="s2">"the_bridge"</span>
<a name="ruby--ex43.rb-idio.html-74"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-75"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-76"></a><span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-77"></a>
<a name="ruby--ex43.rb-idio.html-78"></a>
<a name="ruby--ex43.rb-idio.html-79"></a><span class="k">class</span> <span class="nc">EscapePod</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-80"></a>
<a name="ruby--ex43.rb-idio.html-81"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-82"></a>    <span class="nb">puts</span> <span class="s2">"You rush through the ship desperately trying to make it to"</span>
<a name="ruby--ex43.rb-idio.html-83"></a>    <span class="nb">puts</span> <span class="s2">"the escape pod before the whole ship explodes.  It seems like"</span>
<a name="ruby--ex43.rb-idio.html-84"></a>    <span class="nb">puts</span> <span class="s2">"hardly any Gothons are on the ship, so your run is clear of"</span>
<a name="ruby--ex43.rb-idio.html-85"></a>    <span class="nb">puts</span> <span class="s2">"interference.  You get to the chamber with the escape pods, and"</span>
<a name="ruby--ex43.rb-idio.html-86"></a>    <span class="nb">puts</span> <span class="s2">"now need to pick one to take.  Some of them could be damaged"</span>
<a name="ruby--ex43.rb-idio.html-87"></a>    <span class="nb">puts</span> <span class="s2">"but you don't have time to look.  There's 5 pods, which one"</span>
<a name="ruby--ex43.rb-idio.html-88"></a>    <span class="nb">puts</span> <span class="s2">"do you take?"</span>
<a name="ruby--ex43.rb-idio.html-89"></a>
<a name="ruby--ex43.rb-idio.html-90"></a>    <span class="n">good_pod</span> <span class="o">=</span> <span class="nb">rand</span><span class="p">(</span><span class="mi">1</span><span class="o">..</span><span class="mi">5</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-91"></a>    <span class="nb">print</span> <span class="s2">"[pod #]&gt; "</span>
<a name="ruby--ex43.rb-idio.html-92"></a>    <span class="n">guess</span> <span class="o">=</span> <span class="vg">$stdin</span><span class="o">.</span><span class="n">gets</span><span class="o">.</span><span class="n">chomp</span><span class="o">.</span><span class="n">to_i</span>
<a name="ruby--ex43.rb-idio.html-93"></a>
<a name="ruby--ex43.rb-idio.html-94"></a>    <span class="k">if</span> <span class="n">guess</span> <span class="o">!=</span> <span class="n">good_pod</span>
<a name="ruby--ex43.rb-idio.html-95"></a>      <span class="nb">puts</span> <span class="s2">"You jump into pod %s and hit the eject button."</span> <span class="o">%</span> <span class="n">guess</span>
<a name="ruby--ex43.rb-idio.html-96"></a>      <span class="nb">puts</span> <span class="s2">"The pod escapes out into the void of space, then"</span>
<a name="ruby--ex43.rb-idio.html-97"></a>      <span class="nb">puts</span> <span class="s2">"implodes as the hull ruptures, crushing your body"</span>
<a name="ruby--ex43.rb-idio.html-98"></a>      <span class="nb">puts</span> <span class="s2">"into jam jelly."</span>
<a name="ruby--ex43.rb-idio.html-99"></a>      <span class="k">return</span> <span class="s1">'death'</span>
<a name="ruby--ex43.rb-idio.html-100"></a>    <span class="k">else</span>
<a name="ruby--ex43.rb-idio.html-101"></a>      <span class="nb">puts</span> <span class="s2">"You jump into pod %s and hit the eject button."</span> <span class="o">%</span> <span class="n">guess</span>
<a name="ruby--ex43.rb-idio.html-102"></a>      <span class="nb">puts</span> <span class="s2">"The pod easily slides out into space heading to"</span>
<a name="ruby--ex43.rb-idio.html-103"></a>      <span class="nb">puts</span> <span class="s2">"the planet below.  As it flies to the planet, you look"</span>
<a name="ruby--ex43.rb-idio.html-104"></a>      <span class="nb">puts</span> <span class="s2">"back and see your ship implode then explode like a"</span>
<a name="ruby--ex43.rb-idio.html-105"></a>      <span class="nb">puts</span> <span class="s2">"bright star, taking out the Gothon ship at the same"</span>
<a name="ruby--ex43.rb-idio.html-106"></a>      <span class="nb">puts</span> <span class="s2">"time.  You won!"</span>
<a name="ruby--ex43.rb-idio.html-107"></a>
<a name="ruby--ex43.rb-idio.html-108"></a>
<a name="ruby--ex43.rb-idio.html-109"></a>      <span class="k">return</span> <span class="s1">'finished'</span>
<a name="ruby--ex43.rb-idio.html-110"></a>    <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-111"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-112"></a><span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-113"></a>
<a name="ruby--ex43.rb-idio.html-114"></a><span class="k">class</span> <span class="nc">Finished</span> <span class="o">&lt;</span> <span class="no">Scene</span>
<a name="ruby--ex43.rb-idio.html-115"></a>  <span class="k">def</span> <span class="nf">enter</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-116"></a>    <span class="nb">puts</span> <span class="s2">"You won! Good job."</span>
<a name="ruby--ex43.rb-idio.html-117"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-118"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p35">This is the rest of the game's scenes, and since I know I need them and have thought about how they'll flow together I'm able to code them up directly.</p>
<p id="p36">Incidentally, I wouldn't just type all this code in.  Remember I said to try and build this incrementally, one little bit at a time.  I'm just showing you the final result.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre> 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="k">class</span> <span class="nc">Map</span>
<a name="ruby--ex43.rb-idio.html-2"></a>  <span class="vc">@@scenes</span> <span class="o">=</span> <span class="p">{</span>
<a name="ruby--ex43.rb-idio.html-3"></a>    <span class="s1">'central_corridor'</span> <span class="o">=&gt;</span> <span class="no">CentralCorridor</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-4"></a>    <span class="s1">'laser_weapon_armory'</span> <span class="o">=&gt;</span> <span class="no">LaserWeaponArmory</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-5"></a>    <span class="s1">'the_bridge'</span> <span class="o">=&gt;</span> <span class="no">TheBridge</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-6"></a>    <span class="s1">'escape_pod'</span> <span class="o">=&gt;</span> <span class="no">EscapePod</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-7"></a>    <span class="s1">'death'</span> <span class="o">=&gt;</span> <span class="no">Death</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-8"></a>    <span class="s1">'finished'</span> <span class="o">=&gt;</span> <span class="no">Finished</span><span class="o">.</span><span class="n">new</span><span class="p">(),</span>
<a name="ruby--ex43.rb-idio.html-9"></a>  <span class="p">}</span>
<a name="ruby--ex43.rb-idio.html-10"></a>
<a name="ruby--ex43.rb-idio.html-11"></a>
<a name="ruby--ex43.rb-idio.html-12"></a>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">start_scene</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-13"></a>    <span class="vi">@start_scene</span> <span class="o">=</span> <span class="n">start_scene</span>
<a name="ruby--ex43.rb-idio.html-14"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-15"></a>
<a name="ruby--ex43.rb-idio.html-16"></a>
<a name="ruby--ex43.rb-idio.html-17"></a>  <span class="k">def</span> <span class="nf">next_scene</span><span class="p">(</span><span class="n">scene_name</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-18"></a>    <span class="n">val</span> <span class="o">=</span> <span class="vc">@@scenes</span><span class="o">[</span><span class="n">scene_name</span><span class="o">]</span>
<a name="ruby--ex43.rb-idio.html-19"></a>    <span class="k">return</span> <span class="n">val</span>
<a name="ruby--ex43.rb-idio.html-20"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-21"></a>
<a name="ruby--ex43.rb-idio.html-22"></a>  <span class="k">def</span> <span class="nf">opening_scene</span><span class="p">()</span>
<a name="ruby--ex43.rb-idio.html-23"></a>    <span class="k">return</span> <span class="n">next_scene</span><span class="p">(</span><span class="vi">@start_scene</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-24"></a>  <span class="k">end</span>
<a name="ruby--ex43.rb-idio.html-25"></a><span class="k">end</span>
</pre></div>
</td></tr></tbody></table><p id="p37">After that I have my <tt class="docutils literal">Map</tt> class, and you can see it is storing each scene by name in a hash, and then I refer to that hash with <tt class="docutils literal">@@scenes</tt>.  This is also why the map comes after the scenes because the hash has to refer to the scenes so they have to exist.</p>
<table class="highlighttable"><tbody><tr><td class="linenos"><div class="linenodiv"><pre>1
2
3</pre></div></td><td class="code"><div class="highlight"><pre><span></span><a name="ruby--ex43.rb-idio.html-1"></a><span class="n">a_map</span> <span class="o">=</span> <span class="no">Map</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s1">'central_corridor'</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-2"></a><span class="n">a_game</span> <span class="o">=</span> <span class="no">Engine</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">a_map</span><span class="p">)</span>
<a name="ruby--ex43.rb-idio.html-3"></a><span class="n">a_game</span><span class="o">.</span><span class="n">play</span><span class="p">()</span>
</pre></div>
</td></tr></tbody></table><p id="p38">Finally I've got my code that runs the game by making a <tt class="docutils literal">Map</tt> then handing that map to an <tt class="docutils literal">Engine</tt> before calling <tt class="docutils literal">play</tt> to make the game work.</p>
</div>
<div class="section" id="what-you-should-see">
<h1>What You Should See</h1>
<p id="p39">Make sure you understand the game and that you tried to solve it yourself first.  One thing to do is if you're stumped, is cheat a little by reading my code, then continue trying to solve it yourself.</p>
<p id="p40">When I run my game it looks like this:</p>
<div class="highlight"><pre><span></span><a name="ruby--ex43.sh-idio-shint-pyg.html-1"></a><span class="gp">$</span> ruby ex43.rb
<a name="ruby--ex43.sh-idio-shint-pyg.html-2"></a><span class="go">The Gothons of Planet Percal #25 have invaded your ship and destroyed</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-3"></a><span class="go">your entire crew.  You are the last surviving member and your last</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-4"></a><span class="go">mission is to get the neutron destruct bomb from the Weapons Armory,</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-5"></a><span class="go">put it in the bridge, and blow the ship up after getting into an</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-6"></a><span class="go">escape pod.</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-7"></a>
<a name="ruby--ex43.sh-idio-shint-pyg.html-8"></a><span class="go">You're running down the central corridor to the Weapons Armory when</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-9"></a><span class="go">a Gothon jumps out, red scaly skin, dark grimy teeth, and evil clown costume</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-10"></a><span class="go">flowing around his hate filled body.  He's blocking the door to the</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-11"></a><span class="go">Armory and about to pull a weapon to blast you.</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-12"></a><span class="gp">&gt;</span> dodge!
<a name="ruby--ex43.sh-idio-shint-pyg.html-13"></a><span class="go">Like a world class boxer you dodge, weave, slip and slide right</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-14"></a><span class="go">as the Gothon's blaster cranks a laser past your head.</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-15"></a><span class="go">In the middle of your artful dodge your foot slips and you</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-16"></a><span class="go">bang your head on the metal wall and pass out.</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-17"></a><span class="go">You wake up shortly after only to die as the Gothon stomps on</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-18"></a><span class="go">your head and eats you.</span>
<a name="ruby--ex43.sh-idio-shint-pyg.html-19"></a><span class="go">You died.  You kinda suck at this.</span>
</pre></div></div>
<div class="section" id="study-drills">
<h1>Study Drills</h1>
<ol class="arabic simple">
<li>Change it! Maybe you hate this game.  Could be too violent, you aren't into sci-fi.  Get the game working, then change it to what you like.  This is your computer, you make it do what you want.</li>
<li>I have a bug in this code. Why is the door lock guessing 11 times?</li>
<li>Explain how returning the next room works.</li>
<li>Add cheat codes to the game so you can get past the more difficult rooms.  I can do this with two words on one line.</li>
<li>Go back to my description and analysis, then try to build a small combat system for the hero and the various Gothons he encounters.</li>
<li>This is actually a small version of something called a "finite state machine." Read about them.  They might not make sense but try anyway.</li>
</ol>
</div>
<div class="section" id="common-student-questions">
<h1>Common Student Questions</h1>
<dl class="docutils">
<dt>Where can I find stories for my own games?</dt>
<dd>You can make them up, just like you would tell a story to a friend.  Or you can take simple scenes from a book or movie you like.</dd>
</dl>
</div>
            <!-- RST ENDS -->
        </div>

<div class="row between-xs center-xs middle-xs bare" id="notice" style="background-color: #eee">
    <div class="col-xs-11 col-sm-10 col-md-9 col-lg-8">
        <h1>Learn Python 3.6 Is Coming Soon</h1>
        <p>I'm currently upgrading <a href="http://bit.ly/lpthwbook">Learn Python The Hard Way</a> to Python 3.6 and everyone who buys the current version of <a href="http://bit.ly/lpthwbook">Learn Python The Hard Way</a> will get a <em>free upgrade</em>.  You can get 30% off if you <a href="http://bit.ly/buypython">buy it now with coupon code PYTHON36</a>.  <em>Offer only available for a limited time.</em></p>

    </div>
</div>
    </div>

      <div class="row center-xs" id="buy">
    <div class="text-center col-xs-10 col-sm-5 col-md-4">
      <h2 class="section-title__small">Buy DRM-Free</h2>
      <p id="p41">
        When you buy directly from the author, Zed A. Shaw, you'll get a professional
        quality PDF and  hours of HD Video, all DRM-free and yours to download
        and use as you see fit.
      </p>

      <p class="price-block" id="p42">
      <span class="currency"><span class="prefix">$</span>29.<span class="suffix">99</span></span>
      </p>

      <a href="https://shop.learncodethehardway.org/access/buy/5/" class="btn btn-primary btn-full">Buy Directly From The Author</a>
      
      <p class="text-left btn-subtext" id="p43">
        <small>Or, you can <a href="https://learnrubythehardway.org/book/">read Learn Ruby the Hard Way for free</a> right here, video lectures not included.</small>
      </p>
      
    </div>
    <div class="text-center col-xs-10 col-sm-5 col-md-4 col-sm-offset-1">
      
      <h2 class="section-title__small">Other Buying Options</h2>
      <a href="http://bit.ly/amznlrthw" class="btn btn-secondary btn-full">Buy on Amazon</a>
      <a href="http://bit.ly/informitlrthw" class="btn btn-secondary btn-full">Buy a hard copy from the Publisher</a>
      <a href="http://bit.ly/bnlrthw" class="btn btn-secondary btn-full">Buy a hard copy from Barnes &amp; Noble</a>
      
    </div>
  </div>

  <div class="row center-xs" id="video_holder" style="display: none">
      <div class="col-xs">
          <div data-paydiv_product="5" id="paydiv"></div>
    </div>
  </div>




</div>

    </main>

  </div>

  <div class="row dark bottom-nav">
    <div class="col-xs text-left">
      <a href="https://learnrubythehardway.org/book/ex42.html" class="prev" id="prev_link"><i class="icon-arrow-67"></i> <i class="icon icon-arrow-left"></i> Previous <span class="hide-xs show-sm-inline">Lesson</span></a>
    </div>
    <div class="col-xs text-right"><a href="https://learnrubythehardway.org/book/ex44.html" class="next" id="next_link">Next <span class="hide-xs show-sm-inline">Lesson</span> <i class="icon icon-arrow-right"></i></a>
      </div>
    </div>
  

<footer class="footer">
  <div class="row center-xs">

  <div class="col-xs-11 col-sm-6 col-md-5 col-lg-5">
    <ul class="nav nav-inline">
      <li><h4><a href="https://learnrubythehardway.org/">Home</a></h4></li>
      <li><h4><a href="https://learncodethehardway.org/about/">About</a></h4></li>
      <li><h4><a href="https://learncodethehardway.org/contact/">Contact</a></h4></li>
    </ul>
    <div class="copyright text-left">
      <small class="text-muted">© 2016 Zed A. Shaw</small>
    </div>
  </div>
  <div class="col-xs-11 col-sm-4 col-md-4 col-lg-3">
    <div class="social-media">
      <div class="classy-container">
        <a href="https://twitter.com/lzsthw" class="socicon-twitter"></a>
      </div>
    </div>
  </div>
</div>

</footer>
<script async="" charset="utf-8" src="./LRHW-43_files/saved_resource" type="text/javascript"></script><script src="./LRHW-43_files/scripts.min.js"></script>

<script src="./LRHW-43_files/jquery.js"></script>
<script src="./LRHW-43_files/index.js"></script>
<script src="./LRHW-43_files/jzed.js"></script>
<script src="./LRHW-43_files/video.js"></script>
<link rel="stylesheet" href="./LRHW-43_files/video-js.css">
<script src="./LRHW-43_files/paydiv.js"></script>
<script src="./LRHW-43_files/app.js"></script>
<script src="./LRHW-43_files/littools.js"></script>
<!-- Start of helpthw Zendesk Widget script -->
<iframe src="javascript:false" title="" style="display: none;" src="./LRHW-43_files/saved_resource(2).html"></iframe><script>/*<![CDATA[*/window.zEmbed||function(e,t){var n,o,d,i,s,a=[],r=document.createElement("iframe");window.zEmbed=function(){a.push(arguments)},window.zE=window.zE||window.zEmbed,r.src="javascript:false",r.title="",r.role="presentation",(r.frameElement||r).style.cssText="display: none",d=document.getElementsByTagName("script"),d=d[d.length-1],d.parentNode.insertBefore(r,d),i=r.contentWindow,s=i.document;try{o=s}catch(e){n=document.domain,r.src='javascript:var d=document.open();d.domain="'+n+'";void(0);',o=s}o.open()._l=function(){var o=this.createElement("script");n&&(this.domain=n),o.id="js-iframe-async",o.src=e,this.t=+new Date,this.zendeskHost=t,this.zEQueue=a,this.body.appendChild(o)},o.write('<body onload="document._l();">'),o.close()}("https://assets.zendesk.com/embeddable_framework/main.js","helpthw.zendesk.com");
/*]]>*/</script>
<!-- End of helpthw Zendesk Widget script -->



<div id="ghostery-purple-box" class="ghostery-bottom ghostery-right ghostery-collapsed"><div id="ghostery-box"><div id="ghostery-count" style="background: none; color: rgb(255, 255, 255);">2</div><div id="ghostery-pb-icons-container"><span id="ghostery-breaking-tracker" class="ghostery-pb-tracker" title="Broken Page Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/breaking-icon.svg&quot;); opacity: 0.5;"></span><span id="ghostery-slow-tracker" class="ghostery-pb-tracker" title="Slow Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/slow-icon.svg&quot;); opacity: 0.5;"></span><span id="ghostery-non-secure-tracker" class="ghostery-pb-tracker" title="Non-secure Trackers" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/non-secure-icon.svg&quot;); opacity: 0.5;"></span></div><div id="ghostery-title">Trackers</div><div id="ghostery-minimize"><span id="ghostery-minimize-icon"></span></div><span id="ghostery-close" style="background: url(&quot;chrome-extension://mlomiejdfkolichcflejclcbmpeaniij/app/images/purple_box/collapse.svg&quot;);"></span></div><div id="ghostery-pb-background"><div id="ghostery-trackerList"><div class="ghostery-trackerContainer"><span id="ghostery-no-tracker" class="ghostery-pb-tracker-list"></span><span class="ghostery-tracker">Zendesk</span></div><div class="ghostery-trackerContainer"><span id="ghostery-no-tracker" class="ghostery-pb-tracker-list"></span><span class="ghostery-tracker">Zopim</span></div></div></div></div><div><iframe data-reactroot="" id="ticketSubmissionForm" class="zEWidget-ticketSubmissionForm" style="border: none; background: transparent; z-index: 999999; transform: translateZ(0px); position: fixed; opacity: 0; right: 0px; bottom: 0px; width: 357px; margin-left: 15px; margin-right: 15px; margin-top: 0px; height: 476px; transition-property: none; transition-timing-function: unset; top: -9999px;" src="./LRHW-43_files/saved_resource(3).html"></iframe></div><script>
    (function(d,s){var z=$zopim,$=z.s= d.createElement(s),e=d.getElementsByTagName(s)[0];
    $.async=!0;$.setAttribute('charset','utf-8');
    $.src='https://v2.zopim.com/?43bhyAkp3pYCNphTsHWmY6JMyxmxLXDu';
    z.t=+new Date;$. type='text/javascript';e.parentNode.insertBefore($,e)})(document,'script');
  </script><div><iframe data-reactroot="" id="launcher" class="zEWidget-launcher zEWidget-launcher--active" style="border: none; background: transparent; z-index: 999998; transform: translateZ(0px); position: fixed; opacity: 1; right: 0px; bottom: 0px; width: 112px; height: 47px; margin: 10px 20px; transition-property: all; transition-timing-function: ease-out; transition-duration: 300ms;" src="./LRHW-43_files/saved_resource(4).html"></iframe></div><div><iframe data-reactroot="" id="nps" class="zEWidget-nps" style="border: none; background: transparent; z-index: 2147483647; transform: translateZ(0px); position: fixed; opacity: 0; right: 0px; bottom: 0px; left: 50%; margin-left: -310px; margin-bottom: 15px; width: 640px; margin-top: 0px; height: 177px; transition-property: none; transition-timing-function: unset; top: -9999px;" src="./LRHW-43_files/saved_resource(5).html"></iframe></div><div><iframe data-reactroot="" id="ipm" class="zEWidget-ipm" style="border: none; background: transparent; z-index: 2147483647; transform: translateZ(0px); position: fixed; opacity: 0; right: 0px; top: -230px; margin-right: 15px; margin-top: 0px; height: 180px; width: 395px; transition-property: none; transition-timing-function: unset;" src="./LRHW-43_files/saved_resource(6).html"></iframe></div><style></style></body></html>